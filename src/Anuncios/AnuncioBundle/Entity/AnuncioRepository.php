<?php

namespace Anuncios\AnuncioBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AnuncioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnuncioRepository extends EntityRepository
{
	public function getAnunciosByCategory($campaign, $category)
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT a
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category = :category
				ORDER BY a.votoJurado+a.votoUsuario DESC, a.name'
		)->setParameters(array(
			'campaign' => $campaign,
			'category' => $category
		))
		->getResult();
	}
	
	public function getLeftAnunciosVoteByUser($campaign, $user, $limit)
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT a
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category IN (
					SELECT c.id FROM AnunciosAnuncioBundle:Category as c
				)
				AND a.id NOT IN (
					SELECT IDENTITY(v.anuncio) FROM AnunciosAnuncioBundle:Voting v WHERE v.user = :user
				)
				GROUP BY a.category
				ORDER BY a.name'
		)->setParameters(array(
				'campaign' => $campaign,
				'user' => $user
		))
		->setMaxResults($limit)
		->getResult();
	}
	
	public function getLastAnunciosVoteByUser($campaign, $user, $limit)
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT a
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category IN (
					SELECT c.id FROM AnunciosAnuncioBundle:Category as c
				)
				AND a.id IN (
					SELECT IDENTITY(v.anuncio) FROM AnunciosAnuncioBundle:Voting v WHERE v.user = :user
				)
				GROUP BY a.category
				ORDER BY a.name'
		)->setParameters(array(
				'campaign' => $campaign,
				'user' => $user
		))
		->setMaxResults($limit)
		->getResult();
	}
	
	public function getLastAnunciosVoteByCategory($campaign, $category, $limit)
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT a
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category = :category AND a.id IN (
					SELECT IDENTITY(v.anuncio) FROM AnunciosAnuncioBundle:Voting v ORDER BY v.createdAt DESC
				)'
		)->setParameters(array(
				'campaign' => $campaign,
				'category' => $category
		))
		->setMaxResults($limit)
		->getResult();
	}
	
	public function getAnunciosVoteByJurado($campaign, $category)
	{
		return $this->getEntityManager()
			->createQuery(
				'SELECT a 
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category = :category
				ORDER BY a.votoJurado DESC'
		)->setParameters(array(
				'campaign' => $campaign,
				'category' => $category
		))->setMaxResults(1)
		->getOneOrNullResult();
	}
	
	public function getAnunciosVoteByUsuario($campaign, $category)
	{
		return $this->getEntityManager()
			->createQuery(
				'SELECT a 
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category = :category
				ORDER BY a.votoUsuario DESC'
		)->setParameters(array(
				'campaign' => $campaign,
				'category' => $category
		))->setMaxResults(1)
		->getOneOrNullResult();
	}
	
	public function getAllAnunciosVoteByJurado($campaign, $category)
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT a
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category = :category
				ORDER BY a.votoJurado DESC'
		)->setParameters(array(
				'campaign' => $campaign,
				'category' => $category
		))
		->getResult();
	}
	
	public function getAllAnunciosVoteByUsuario($campaign, $category)
	{
		return $this->getEntityManager()
		->createQuery(
				'SELECT a
				FROM AnunciosAnuncioBundle:Anuncio a
				WHERE a.campaign = :campaign AND a.category = :category
				ORDER BY a.votoUsuario DESC'
		)->setParameters(array(
				'campaign' => $campaign,
				'category' => $category
		))
		->getResult();
	}
}
